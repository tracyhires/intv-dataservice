<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.dendreon</groupId>
		<artifactId>dendreon-parent</artifactId>
		<version>1.0.0.1</version>
	</parent>
	<groupId>com.dendreon.intellivenge</groupId>
	<artifactId>dataservice</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>Intellivenge Data Service</name>

	<properties>
		<jdk.version>1.6</jdk.version>
		<oracle.jdbc.version>11.2.0.1.0</oracle.jdbc.version>
		<maven.version>[3.0.4,)</maven.version>
		<slf4j.version>1.6.6</slf4j.version>
		<logback.version>1.0.7</logback.version>
		<dendreon-liquibase.version>1.0.0.1</dendreon-liquibase.version>
		<surefire.version>2.7.2</surefire.version>
		<guice.version>3.0</guice.version>
		<testng.version>6.7</testng.version>
		<persistence.utils.version>1.0.0.1</persistence.utils.version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>${oracle.jdbc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
           <groupId>com.dendreon</groupId>
           <artifactId>persistence-utils</artifactId>
           <version>${persistence.utils.version}</version>
       </dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-jndi</artifactId>
			<version>${guice.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-servlet</artifactId>
			<version>${guice.version}</version>
		</dependency>
		<dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>

		<!-- Use liquibase to define schema used in the test database via the liquibase 
			configuration in the test/resources/db directory. Whereas, the production 
			definition is in the database-definition module. -->
		<dependency>
			<groupId>com.dendreon</groupId>
			<artifactId>liquibase</artifactId>
			<version>${dendreon-liquibase.version}</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>

		<!-- In-memory test database setup -->
		<dependency>
			<groupId>com.dendreon</groupId>
			<artifactId>test-database</artifactId>
			<scope>test</scope>
			<version>1.0.1-SNAPSHOT</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.version}</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<systemPropertyVariables>
						<!-- We set this so that our tests can know the root build directory 
							in order to access customizations added as part of the testing process. -->
						<project.build.directory>${project.build.directory}</project.build.directory>
						<!-- Use test database in-memory - no files are written, so it is faster. -->
						<test.testdb.inmemory>true</test.testdb.inmemory>
						<!-- Path to the embedded database used for testing (when not in in-memory 
							mode). -->
						<test.testdb.path>${project.build.directory}/test-db</test.testdb.path>
						<!-- Turns on JDBC connection spying when enabled -->
						<test.testdb.jdbcspy>false</test.testdb.jdbcspy>
						<!-- JNDI name that points to the database -->
						<test.testdb.jndiname>java:/comp/env/jdbc/xxsap</test.testdb.jndiname>
						<test.testdb.schemaname>XXSAP</test.testdb.schemaname>
						<!-- Hibernate Dialect to run the Hibernate with during unit tests -->
						<hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>